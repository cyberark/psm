---
# tasks file for psm prerequisities

- name: update NLA & UpdateRDSSecurityLayer installation
  win_shell: |
    try
    {
        $filePath = "{{ psm_installationautomation_folder }}\\Prerequisites\\PrerequisitesConfig.xml"
        $xml = [xml](Get-Content $filePath)
        $step1 = $xml.SelectSingleNode("//Step[@Name = 'DisableNLA']")
        $step1.Enable = 'Yes'
        $step2 = $xml.SelectSingleNode("//Step[@Name = 'UpdateRDSSecurityLayer']")
        $step2.Enable = 'Yes'
        $xml.Save($filePath)
        exit 0
    }
    catch
    {
        Write-Output "Error occured during SetAtrributeInXML"
        exit 1
    }

- name: Preinstall Block
  block:

    - name: execute psm prerequisities
      win_shell: |

        $RegPath = "HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon"
        Set-ItemProperty $RegPath "AutoAdminLogon" -Value "1" -type String  
        Set-ItemProperty $RegPath "DefaultUsername" -Value {{ ansible_user }} -type String  
        Set-ItemProperty $RegPath "DefaultPassword" -Value {{ ansible_password }} -type String
        
        Set-Location "{{ psm_installationautomation_folder }}"
        $Action = .\Execute-Stage.ps1 "{{ psm_installationautomation_folder }}\Prerequisites\PrerequisitesConfig.xml" -displayJson -delayedrestart
        $Action | Out-File -FilePath "{{ psm_prerequisites_log }}"
        $Result = Get-Content "{{ psm_prerequisites_log }}" | ConvertFrom-Json
        if ($Result.isSucceeded -ne 0) {
            exit 1
        } else {
            exit 0
        }
    
    - win_reboot:
        reboot_timeout: 300
        
    - name: continue execute psm prerequisities after restart
      win_shell: |
        
        Set-Location "{{ psm_installationautomation_folder }}"
        $Action = .\Execute-Stage.ps1 "{{ psm_installationautomation_folder }}\Prerequisites\PrerequisitesConfig.xml" -displayJson
        $Action | Out-File -FilePath "{{ psm_prerequisites_log }}"
        $Result = Get-Content "{{ psm_prerequisites_log }}" | ConvertFrom-Json
        if ($Result.isSucceeded -ne 0) {
            exit 1
        } else {
            exit 0
        }

  rescue:

    - name: Get log path for preinstall
      win_shell: |
        $Result = Get-Content "{{ psm_prerequisites_log }}"
        Write-Output $Result
      register: log_result

    - fetch:
        src: '{{ log_result.stdout | from_json | json_query("logPath") }}'
        dest: '{{ playbook_dir }}/logs/psm/{{ inventory_hostname }}_preinstall.log'
        flat: yes

    - fail:
        msg: 'ERROR: Preinstall failed. For more info check {{ playbook_dir }}/logs/psm/{{ inventory_hostname }}_preinstall.log'
