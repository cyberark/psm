---
# tasks file for psm registration

- name: Registration Block
  block:

    - name: Execute psm registration
      win_command: 'RegisterComponent.exe PSM /accepteula Yes /vaultip {{ vault_ip }} /vaultport {{ vault_port }} /vaultuser {{ vault_username }} /vaultpassword {{ vault_password }} /psminstalldir "{{ psm_installation_path }}"\PSM /psmrecordingsdir "{{ psm_installation_path }}"\PSM\Recordings'
      args:
        chdir: "{{ psm_registrationtool_folder }}"
      when: dr_vault_ip is not defined

    - name: Execute psm registration
      win_command: 'RegisterComponent.exe PSM /accepteula Yes /vaultip {{ vault_ip }},{{ dr_vault_ip }} /vaultport {{ vault_port }} /vaultuser {{ vault_username }} /vaultpassword {{ vault_password }} /psminstalldir "{{ psm_installation_path }}"\PSM /psmrecordingsdir "{{ psm_installation_path }}"\PSM\Recordings'
      args:
        chdir: "{{ psm_registrationtool_folder }}"
      when: dr_vault_ip is defined

    - name: Get log path for registration
      win_shell: |
        $Result = Get-Content "{{ psm_registration_log }}"
        Write-Output $Result
      register: log_result

    - name: Fetch registration log from path
      fetch:
        src: '{{ item.logPath }}'
        dest: '{{ lookup("config", "DEFAULT_LOG_PATH") }}/psm/{{ inventory_hostname }}_registration.log'
        flat: yes
      with_items:
        - "{{ log_result.stdout | from_json }}"

    - name: start psm service & set to auto
      win_service:
        name: "{{ psm_service_name }}"
        start_mode: auto
        state: started

    - name: check if psm service is running
      win_service:
        name: "{{ psm_service_name }}"
      register: psm_service_info

    - set_fact:
        psm_registered: true
      when: psm_service_info.state == "running"

  rescue:

    - name: Get log path for registration
      win_shell: |
        $Result = Get-Content "{{ psm_registration_log }}"
        Write-Output $Result
      register: log_result

    - name: Fetch registration log from path
      fetch:
        src: '{{ item.logPath }}'
        dest: '{{ lookup("config", "DEFAULT_LOG_PATH") }}/psm/{{ inventory_hostname }}_registration.log'
        flat: yes
      with_items:
        - "{{ log_result.stdout | from_json }}"

    - fail:
        msg: 'ERROR: Registration failed. For more info check {{ lookup("config", "DEFAULT_LOG_PATH") }}/psm/{{ inventory_hostname }}_registration.log'
