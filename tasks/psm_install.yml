---
# tasks file for psm installation

- name: set installation folder on xml config file
  win_shell: |
    try
    {
        ### This script set the install directory received from var in the install config file
        $filePath = "{{ psm_installationautomation_folder }}\\Installation\\InstallationConfig.xml"
        $xml = [xml](Get-Content $filePath)
        $step1 = $xml.SelectSingleNode("//Parameter[@Name = 'InstallationDirectory']")
        $step1.Value = "{{ psm_installation_path }}"
        $step2 = $xml.SelectSingleNode("//Parameter[@Name = 'RecordingDirectory']")
        $step2.Value = "{{ psm_installation_path }}\PSM\Recordings"
        $xml.Save($filePath)
        exit 0
    }
    catch
    {
        Write-Output "Error occured during SetAtrributeInXML"
        exit 1
    }

- name: Installation Block
  block:

    - name: execute psm installation
      win_shell: |
        Set-Location "{{ psm_installationautomation_folder }}"
        $Action = .\Execute-Stage.ps1 "{{ psm_installationautomation_folder }}\Installation\InstallationConfig.xml" -displayJson -delayedrestart
        $Action | Out-File -FilePath "{{ psm_install_log }}"
        $Result = Get-Content "{{ psm_install_log }}" | ConvertFrom-Json
        if ($Result.isSucceeded -ne 0) {
            exit 1
        } else {
            exit 0
        }

  rescue:

    - name: Get log path for installation
      win_shell: |
        $Result = Get-Content "{{ psm_install_log }}"
        Write-Output $Result
      register: log_result

    - fetch:
        src: '{{ log_result.stdout | from_json | json_query("logPath") }}'
        dest: '{{ playbook_dir }}/logs/psm/{{ inventory_hostname }}_install.log'
        flat: yes

    - fail:
        msg: 'ERROR: Installation failed. For more info check {{ playbook_dir }}/logs/psm/{{ inventory_hostname }}_install.log'

- name: check psm service status
  win_service: 
    name: "{{ psm_service_name }}"
  register: psm_service_info
  
- set_fact:
    psm_exists: "{{ psm_service_info.exists }}"